<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.terradue</groupId>
		<artifactId>t2-parent</artifactId>
		<version>13</version>
	</parent>

	<groupId>com.terradue.scoop</groupId>
	<artifactId>gdal-csharp</artifactId>
	<version>1.7.3.2</version>
	<packaging>pom</packaging>

	<dependencies>
	</dependencies>

	<properties>
		<srcURLSuffix>tar.gz</srcURLSuffix>
	</properties>

	<build>
		<plugins>
			<plugin>
		        <artifactId>maven-resources-plugin</artifactId>
		        <version>2.6</version>
		        <executions>
		          <execution>
		            <id>copy-resources</id>
		            <phase>validate</phase>
		            <goals>
		              <goal>copy-resources</goal>
		            </goals>
		            <configuration>
		              <outputDirectory>${project.build.directory}</outputDirectory>
		              <resources>          
		                <resource>
		                  <directory>${basedir}</directory>
		                  <filtering>true</filtering>
		                  <includes>
          					<include>Terradue.GDAL.Native.nuspec</include>
        				  </includes>
		                </resource>
		              </resources>              
		            </configuration>            
		          </execution>
		        </executions>
		      </plugin>
			<plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-antrun-plugin</artifactId>
	            <executions>
	                <execution>
	                    <id>createThriftDir</id>
	                    <phase>initialize</phase>
	                    <configuration>
	                        <tasks>
	                            <delete dir="${project.build.directory}/staged"/>
	                            <mkdir dir="${project.build.directory}/staged"/>
	                        </tasks>
	                    </configuration>
	                    <goals>
	                        <goal>run</goal>
	                    </goals>
	                </execution>
	            </executions>
	         </plugin>
	          <plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>exec-maven-plugin</artifactId>
		        <version>1.2.1</version>
		        <executions>
		        	<execution>
		          	<id>copy</id>
					<phase>initialize</phase>
		            <goals>
		              <goal>exec</goal>
		            </goals>
		            <configuration>
		            	
			          <executable>cp</executable>
			          <arguments>
			          	<argument>-pr</argument>
			          	<argument>${basedir}/gdal/gdal</argument>
			          	<argument>${project.build.directory}/</argument>
			          </arguments>
			          <workingDirectory>${project.build.directory}</workingDirectory>
			        </configuration>
		          </execution>
		        	<execution>
		          	<id>configure</id>
					<phase>process-resources</phase>
		            <goals>
		              <goal>exec</goal>
		            </goals>
		            <configuration>
		            	<environmentVariables>
					  <CPPFLAGS>-I/usr/include/libgeotiff/</CPPFLAGS>
					  </environmentVariables>
			          <executable>./configure</executable>
			          <arguments>
			          	<argument>--prefix=${project.build.directory}/staged</argument>
			          </arguments>
			          <workingDirectory>${project.build.directory}/gdal</workingDirectory>
			        </configuration>
		          </execution>
		          <execution>
		          	<id>make</id>
					<phase>compile</phase>
		            <goals>
		              <goal>exec</goal>
		            </goals>
		            <configuration>
		            	<environmentVariables>
					  <CPPFLAGS>-I/usr/include/libgeotiff/</CPPFLAGS>
					  </environmentVariables>
			          <executable>make</executable>
			          <workingDirectory>${project.build.directory}/gdal</workingDirectory>
			        </configuration>
		          </execution>
		          <execution>
		          	<id>make-swig</id>
					<phase>compile</phase>
		            <goals>
		              <goal>exec</goal>
		            </goals>
		            <configuration>
			          <executable>make</executable>
			          <workingDirectory>${project.build.directory}/gdal/swig</workingDirectory>
			        </configuration>
		          </execution>
		          <execution>
		          	<id>make-generate-csharp</id>
					<phase>compile</phase>
		            <goals>
		              <goal>exec</goal>
		            </goals>
		            <configuration>
			          <executable>make</executable>
			          <arguments>
			          	<argument>generate</argument>
			          </arguments>
			          <workingDirectory>${project.build.directory}/gdal/swig/csharp</workingDirectory>
			        </configuration>
		          </execution>
		          <execution>
		          	<id>patch-csharp</id>
					<phase>compile</phase>
		            <goals>
		              <goal>exec</goal>
		            </goals>
		            <configuration>
			          <executable>${basedir}/patches/patch.sh</executable>
			          <arguments>
			          	<argument>${basedir}/patches</argument>
			          	<argument>${project.build.directory}/gdal/swig/csharp</argument>
			          </arguments>
			          <workingDirectory>${basedir}</workingDirectory>
			        </configuration>
		          </execution>
		          <execution>
		          	<id>make-compile-csharp</id>
					<phase>compile</phase>
		            <goals>
		              <goal>exec</goal>
		            </goals>
		            <configuration>
			          <executable>make</executable>
			          <workingDirectory>${project.build.directory}/gdal/swig/csharp</workingDirectory>
			        </configuration>
		          </execution>
		          <execution>
		          	<id>xbuild</id>
					<phase>compile</phase>
		            <goals>
		              <goal>exec</goal>
		            </goals>
		            <configuration>
			          <executable>xbuild</executable>
			          <workingDirectory>${basedir}</workingDirectory>
			        </configuration>
		          </execution>
		          <execution>
		          	<id>copy-dlls</id>
					<phase>prepare-package</phase>
		            <goals>
		              <goal>exec</goal>
		            </goals>
		            <configuration>
			          <executable>cp</executable>
			          <arguments>
			          	<argument>-pr</argument>
			          	<argument>${basedir}/Terradue.GDAL.Native/bin</argument>
			          	<argument>${project.build.directory}/bin</argument>
			          </arguments>
			        </configuration>
		          </execution>
		          <execution>
		          	<id>nuget-pack</id>
					<phase>package</phase>
		            <goals>
		              <goal>exec</goal>
		            </goals>
		            <configuration>
			          <executable>nuget</executable>
			          <arguments>
			          	<argument>pack</argument>
			          </arguments>
			          <workingDirectory>${project.build.directory}</workingDirectory>
			        </configuration>
		          </execution>
		        </executions>
		    </plugin>
		</plugins>
	</build>


	<scm>
		<url>https://gateway.terradue.com/repo/products/sugar/DotNetGDALNative</url>
		<connection>scm:svn:https://gateway.terradue.com/repo/products/sugar/DotNetGDALNative</connection>
		<developerConnection>scm:svn:https://gateway.terradue.com/repo/products/sugar/DotNetGDALNative</developerConnection>
	</scm>

</project>
